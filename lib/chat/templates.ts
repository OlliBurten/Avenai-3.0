import type { TemplateOptions, CodeTemplateFn } from "./templates.types";

export const codeTemplatePython: CodeTemplateFn = ({ baseUrl = "https://api.example.com/v1", endpoint = "/sessions" } = {}) => {
  return [
    "```python",
    "import requests",
    "",
    `BASE_URL = "${baseUrl}"`,
    `API_KEY   = "YOUR_API_KEY_HERE"  # TODO: replace`,
    "",
    "headers = {",
    '    "Authorization": f"Bearer {API_KEY}",',
    '    "Content-Type": "application/json",',
    "}",
    "",
    "# Create a new verification session",
    `resp = requests.post(f"{BASE_URL}${endpoint}", headers=headers, json={`,
    '    "customerRef": "12345",',
    '    "features": ["document", "liveness"]',
    "})",
    "",
    "if resp.status_code in (200, 201):",
    "    data = resp.json()",
    '    print("Session created:", data.get("id", data))',
    "else:",
    '    print("Error:", resp.status_code, resp.text)',
    "```",
    "",
    "_Note: Endpoint path and headers are placeholders unless your docs explicitly define them._",
  ].join("\n");
};

export const codeTemplateNode: CodeTemplateFn = ({ baseUrl = "https://api.example.com/v1", endpoint = "/sessions" } = {}) => {
  return [
    "```javascript",
    "import fetch from 'node-fetch';",
    "",
    `const BASE_URL = "${baseUrl}";`,
    `const API_KEY   = "YOUR_API_KEY_HERE"; // TODO: replace`,
    "",
    "async function createSession() {",
    "  const res = await fetch(`${BASE_URL}${endpoint}`, {",
    "    method: 'POST',",
    "    headers: {",
    "      'Authorization': `Bearer ${API_KEY}` ,",
    "      'Content-Type': 'application/json'",
    "    },",
    "    body: JSON.stringify({",
    '      customerRef: "12345",',
    '      features: ["document", "liveness"]',
    "    })",
    "  });",
    "",
    "  if (res.ok) {",
    "    const data = await res.json();",
    "    console.log('Session created:', data.id || data);",
    "  } else {",
    "    console.error('Error:', res.status, await res.text());",
    "  }",
    "}",
    "",
  "createSession().catch(console.error);",
  "```",
  "",
  "_Note: Endpoint path and headers are placeholders unless your docs explicitly define them._",
].join("\n");
};
